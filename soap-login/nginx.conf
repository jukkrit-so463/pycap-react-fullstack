worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout  65;

    server {
        listen 80;
        server_name localhost;

        # 1. ให้บริการไฟล์ของ React App
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # 2. ส่งต่อ (Proxy) คำขอ API ไปยัง Backend
        location /api/ {
            proxy_pass http://backend:5000/; # 'backend' คือชื่อ service ใน docker-compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # --- Optional: Reverse Proxy สำหรับ External SOAP Service ---
        # หากคุณต้องการให้ Frontend เรียก SOAP service ผ่าน Nginx โดยตรง
        location /webservice/ {
            proxy_pass http://10.106.0.210/webservice/;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
# nginx.conf (ไฟล์นี้อยู่ใน context ของ frontend เช่น ./soap-login/nginx.conf)
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80;
        server_name localhost; # หรือชื่อโดเมนของคุณ

        # Serves React static files ของคุณ
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # --- Reverse Proxy สำหรับ External SOAP Service ---
        # ทุก Request จาก React app ที่ขึ้นต้นด้วย /webservice/ จะถูก Nginx ส่งต่อไปยัง 10.106.0.210
        location /webservice/ {
            proxy_pass http://10.106.0.210/webservice/;
            # คุณอาจต้องเพิ่ม header เฉพาะบางอย่าง ถ้า SOAP service ต้องการ
            # เช่น ถ้าต้องการ Host header เดิม หรือ SOAPAction
            # proxy_set_header Host $host;
            # proxy_set_header SOAPAction "uri:checkauthentication"; # เพิ่มเฉพาะเมื่อ SOAP service ต้องการ

            # แนะนำสำหรับ POST Request ที่มี Body Data ขนาดใหญ่
            proxy_request_buffering off;
            client_max_body_size 10M; # ปรับค่าได้ถ้า SOAP Request Body มีขนาดใหญ่มาก
        }

        # --- Reverse Proxy สำหรับ Node.js Backend ของคุณ ---
        # อันนี้อ้างอิงจาก REACT_APP_BACKEND_URL: /api ที่คุณตั้งค่าไว้ใน docker-compose.yml
        location / {
            proxy_pass http://backend:5000/; # 'backend' คือชื่อ service ใน docker-compose.yml
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}